#!/bin/sh
#
# Slackware build script for OpenOffice.org
# Rewritten by Georgi D. Sotirov <gdsotirov@dir.bg>
#
# The source package is retrieved from
#   ftp://ftp.spnet.net/ooo-bg/2.2/linux/
#

. ../slack-package.conf

NAME=openoffice.org
VERSION_MAJOR=2
VERSION_MINOR=2
VERSION_PATCH=0
VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH
BUILD=1
LOCALE=bg

ARCH=i586

if [ "$ARCH" == "i586" ]; then
  PACK_NAME="OOo_${VERSION}_LinuxX86_install_bg-en_rpm"
elif [ "$ARCH" == "x86_64" ]; then
  PACK_NAME="OOo_${VERSION}_LinuxX86-64_install_bg_en_rpm"
else
  PACK_NAME="OOo_${VERSION}_Linux${ARCH}_install_bg_en_rpm"
fi

if [ ! -d $TMP ]; then
  mkdir -p $TMP
fi

# Package build location
PKG=$TMP/package-$NAME
mkdir -p $PKG

# Extract data
LOG_FILE=$CWD/package-$NAME-$VERSION.log
cd $TMP
ARCHIVE="$PACK_NAME.tar.gz"
echo "Extracting application archive $ARCHIVE..."
tar -zxvf $CWD/$ARCHIVE > $LOG_FILE 2>&1

SRC=$TMP/$PACK_NAME

echo "Extracting files from rpm packages..."
( cd $SRC/RPMS
  unrpm *.rpm >> $LOG_FILE 2>&1
  mv opt $PKG )

echo "Making integration..."
( cd $SRC/RPMS/desktop-integration
  unrpm openoffice.org-redhat-menus-$VERSION_MAJOR.$VERSION_MINOR-*.noarch.rpm >> $LOG_FILE 2>&1
  mv usr $PKG
  rm -r $PKG/usr/share/applnk-redhat
  rm -r $PKG/usr/share/application-registry
  rm $PKG/usr/share/applications/*.desktop
  install -m 644 $PKG/opt/${NAME}${VERSION_MAJOR}.${VERSION_MINOR}/share/xdg/*.desktop $PKG/usr/share/applications
  install -d -m 755 $PKG/opt/kde/share/icons/hicolor
  cp -r $PKG/usr/share/icons/hicolor/* $PKG/opt/kde/share/icons/hicolor
  install -d -m 755 $PKG/opt/kde/share/icons/locolor
  cp -r $PKG/usr/share/icons/locolor/* $PKG/opt/kde/share/icons/locolor
  install -d -m 755 $PKG/opt/kde/share/mimelnk/application
  cp -r $pKG/usr/share/mimelnk/application/* $PKG/opt/kde/share/mimelnk/application )

# Fix paths
( cd $PKG
  sed -i "s/\/etc\/$NAME/\/opt\/$NAME/" $PKG/usr/bin/$NAME${VERSION_MAJOR}.$VERSION_MINOR
  sed -i "s/\/etc\/$NAME/\/opt\/$NAME/" $PKG/usr/bin/$NAME${VERSION_MAJOR}.$VERSION_MINOR-printeradmin )

# Create service infos
cd $PKG
echo "Creating service information..."
mkdir -p $PKG/install
install -m 644 $CWD/slack-desc $PKG/install
SRCDIR=$PKG/usr/src/slackbuilds/$NAME-$LOCALE-$VERSION
mkdir -p $SRCDIR
install -m 644 $CWD/$NAME.SlackBuild $SRCDIR
install -m 644 $CWD/slack-desc $SRCDIR

# Fix permisions
echo "Setting file and directory permissions..."
chown -R root:root *
for dir in `find ./ -type d`; do chmod 755 $dir; done
bin_perms $PKG

# Create documentation
DOCFILES="$DOCFILES LICENSE*"
echo "Creating the documentation for $NAME-$VERSION..."
( cd $PKG/opt/${NAME}${VERSION_MAJOR}.${VERSION_MINOR}/licenses
  create_docs $PKG $NAME-$LOCALE-$VERSION )
( cd $PKG/opt/${NAME}${VERSION_MAJOR}.${VERSION_MINOR}/readmes
  create_docs $PKG $NAME-$LOCALE-$VERSION )

# Make the package
echo "Creating package $NAME-$VERSION..."
cd $PKG
makepkg -l y -c n $PKG_DIR/$NAME-$LOCALE-$VERSION-$ARCH-$BUILD$MYIN.tgz >> $LOG_FILE 2>&1
cd $PKG_DIR
cp $CWD/slack-desc $NAME-$LOCALE-$VERSION-$ARCH-$BUILD$MYIN.txt
md5sum $NAME-$LOCALE-$VERSION-$ARCH-$BUILD$MYIN.tgz > $NAME-$LOCALE-$VERSION-$ARCH-$BUILD$MYIN.tgz.md5

# Clean up (optionally)
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning up..."
  rm -rf $SRC
  rm -rf $PKG
fi

echo "All done."

