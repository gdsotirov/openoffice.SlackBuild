#!/bin/sh
#
# Slackware build script for Apache OpenOffice
# Copyright (C) 2006-2020 Georgi D. Sotirov <gdsotirov@gmail.com>
# The source packages are retrieved from ftp://ftp.spnet.net/ooo-bg/
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=OpenOffice
PNAME=$(echo $NAME | tr [:upper:] [:lower:])
VERSION_MAJOR=4
VERSION_MINOR=1
VERSION_PATCH=8
VERSION=$VERSION_MAJOR.$VERSION_MINOR.$VERSION_PATCH
VER_BUILD_MENUS=9800
ARCH=${ARCH:-i686}
if [ "$ARCH" == "i386" -o "$ARCH" == "i486" -o "$ARCH" == "i686" ]; then
  ARCH=i586
fi
BUILD=${BUILD:-1}
LOCALE=en-US

CWD=${CWD:-`pwd`}
TMP=${TMP:-/tmp}

function unrpm() {
  rpm2cpio < $1 | cpio --extract --make-directories --unconditional --preserve-modification-time
}

# Check for required utilities
which rpm2cpio >/dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Utility 'rpm2cpio' is missing. Please, install the package 'rpm' in order to continue."
  exit 1
fi
which cpio >/dev/null 2>&1
if [ $? -ne 0 ]; then
  echo "Utility 'cpio' is missing. Please, install the package 'cpio' in order to continue."
  exit 2
fi

# Apache_OpenOffice_4.0.1_Linux_x86_install-rpm_en-US.tar.gz
# Apache_OpenOffice_4.0.1_Linux_x86-64_install-rpm_en-US.tar.gz
if [ "$ARCH" == "i586" ]; then
  PACK_NAME="Apache_${NAME}_${VERSION}_Linux_x86_install-rpm_${LOCALE}"
elif [ "$ARCH" == "x86_64" ]; then
  PACK_NAME="Apache_${NAME}_${VERSION}_Linux_x86-64_install-rpm_${LOCALE}"
else
  PACK_NAME="Apache_${NAME}_${VERSION}_Linux_${ARCH}_install-rpm_${LOCALE}"
fi
SRC_DIR=${PACK_NAME}

SRC=$TMP/$SRC_DIR
if [ -e $SRC_DIR ]; then
  echo "Source directory '$SRC_DIR' already exists! Plaese, move it or remove it."
  exit 1
fi

# Package build location
PKG=$TMP/package-$PNAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
mkdir -p $PKG

# Extract archive
cd $TMP
ARCHIVE="$PACK_NAME.tar.gz"
echo "[Step 1 of 7] Extracting application archive $ARCHIVE..."
if [ -e $CWD/$ARCHIVE ]; then
  tar -xvf $CWD/$ARCHIVE || exit 3
  mv $TMP/${LOCALE} $SRC
else
  echo "File $CWD/$ARCHIVE does not exists! Exiting."
  exit 3
fi

echo "[Step 2 of 7] Extracting files from rpm packages..."
cd $SRC/RPMS
for FILE in *.rpm; do
  echo -n "$FILE: "
  unrpm $FILE
done
mv opt $PKG

echo "[Step 3 of 7] Desktop integration..."
cd $SRC/RPMS/desktop-integration
unrpm ${PNAME}${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}-redhat-menus-${VERSION_MAJOR}.${VERSION_MINOR}.${VERSION_PATCH}-${VER_BUILD_MENUS}.noarch.rpm
mv usr $PKG

( cd $PKG/usr/bin
  rm -rf soffice
  ln -sf /opt/${PNAME}${VERSION_MAJOR}/program/soffice soffice )

rm -rf $PKG/usr/share/application-registry
rm -rf $PKG/usr/share/applnk-redhat

rm -rf $PKG/usr/share/applications/*.desktop
cd $PKG/opt/${PNAME}${VERSION_MAJOR}/share/xdg
for FILE in *.desktop; do
  install -m 644 $FILE $PKG/usr/share/applications/${PNAME}${VERSION_MAJOR}-${FILE}
done

# Fix paths
cd $PKG
sed -i "s/\/etc\/$PNAME/\/opt\/$PNAME/" $PKG/usr/bin/${PNAME}${VERSION_MAJOR}
sed -i "s/\/etc\/$PNAME/\/opt\/$PNAME/" $PKG/usr/bin/${PNAME}${VERSION_MAJOR}-printeradmin

# Fix permisions
echo "[Step 4 of 7] Setting file and directory permissions..."
cd $PKG
chown -R root:root *
find . -type d -exec chmod 755 {} \;
chmod -R u+rw,go+r-w,a-s .
bin_perms $PKG

# Create documentation
echo "[Step 5 of 7] Creating the documentation for $PNAME-$VERSION..."
DOCSDIR=$PKG/usr/doc/${PNAME}-${VERSION}
install -m 755 -d $DOCSDIR
install -m 644 $SRC/licenses/LICENSE              $DOCSDIR/COPYING
install -m 644 $SRC/licenses/NOTICE               $DOCSDIR/NOTICE
install -m 644 $SRC/readmes/README_${LOCALE}      $DOCSDIR/README
install -m 644 $SRC/readmes/README_${LOCALE}.html $DOCSDIR/README.html

# Create service infos
echo "[Step 6 of 7] Creating package's service information..."
cd $PKG
install -m 755 -d $PKG/install
install -m 644 $CWD/doinst.sh      $PKG/install/doinst.sh
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/slack-suggests $PKG/install/slack-suggests

SBDIR=$PKG/usr/src/slackbuilds/${PNAME}-${VERSION}
install -m 755 -d $SBDIR
install -m 644 $CWD/doinst.sh           $SBDIR/doinst.sh
install -m 644 $CWD/slack-desc          $SBDIR/slack-desc
install -m 644 $CWD/slack-required      $SBDIR/slack-required
install -m 644 $CWD/slack-suggests      $SBDIR/slack-suggests
install -m 644 $CWD/${PNAME}.SlackBuild $SBDIR/${PNAME}.SlackBuild

# Make the package
echo "[Step 7 of 7] Creating package $PNAME-$VERSION..."
cd $PKG
PKGNAME=${PNAME}-${VERSION}-${ARCH}-${BUILD}${MYIN}
makepkg -l y -c n -p $PKG_DIR/${PKGNAME}.txz
cd $PKG_DIR
cp $CWD/slack-desc ${PKGNAME}.txt
md5sum ${PKGNAME}.txz > ${PKGNAME}.txz.md5

# Clean up (optionally)
if [ "$1" = "--cleanup" ]; then
  echo "Cleaning up..."
  rm -rf $SRC
  rm -rf $PKG
fi

echo "All done."

